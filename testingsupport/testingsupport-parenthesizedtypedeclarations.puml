@startuml
namespace parenthesizedtypedeclarations {
    interface Bar  {
        + Bar()

    }
    interface Foo  {
        + Foo()

    }
    class defaultFoo << (S,Aquamarine) >> {
    }
    class parenthesizedtypedeclarations.defaultFoo << (S,Aquamarine) >> {
        + Foo()

    }
}

"parenthesizedtypedeclarations.Foo" <|-- "parenthesizedtypedeclarations.defaultFoo"


namespace testingsupport {
    class test << (S,Aquamarine) >> {
        - field int
        - field2 TestComplicatedAlias
        - foo parenthesizedtypedeclarations.Foo

        - test()

    }
    class testingsupport.TestComplicatedAlias << (T, #FF7700) >>  {
    }
    class testingsupport.myInt << (T, #FF7700) >>  {
    }
    class "func(strings.Builder) bool" as funcstringsBuilderbool {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}


"testingsupport.test" o-- "parenthesizedtypedeclarations.Foo"
"testingsupport.test" o-- "testingsupport.TestComplicatedAlias"

"__builtin__.int" #.. "testingsupport.myInt"
"testingsupport.funcstringsBuilderbool" #.. "testingsupport.TestComplicatedAlias"
@enduml
